import java.util.*;

class Student {
    private String studentId;
    private String name;
    private int age;
    private double grade;

    public Student(String studentId, String name, int age, double grade) {
        this.studentId = studentId;
        this.name = name;
        this.age = age;
        this.grade = grade;
    }

    public String getStudentId() {
        return studentId;
    }

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }

    public double getGrade() {
        return grade;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public void setGrade(double grade) {
        this.grade = grade;
    }

    public void displayStudentInfo() {
        System.out.println("Student ID: " + studentId);
        System.out.println("Name: " + name);
        System.out.println("Age: " + age);
        System.out.println("Grade: " + grade);
    }
}

class StudentManagementSystem {
    private Map<String, Student> students;

    public StudentManagementSystem() {
        students = new HashMap<>();
    }

    public void addStudent(String studentId, String name, int age, double grade) {
        if (students.containsKey(studentId)) {
            System.out.println("Student with this ID already exists.");
        } else {
            Student newStudent = new Student(studentId, name, age, grade);
            students.put(studentId, newStudent);
            System.out.println("Student added successfully.");
        }
    }

    public void removeStudent(String studentId) {
        if (students.containsKey(studentId)) {
            students.remove(studentId);
            System.out.println("Student removed successfully.");
        } else {
            System.out.println("Student not found.");
        }
    }

    public void updateStudent(String studentId, String name, int age, double grade) {
        if (students.containsKey(studentId)) {
            Student student = students.get(studentId);
            student.setName(name);
            student.setAge(age);
            student.setGrade(grade);
            System.out.println("Student updated successfully.");
        } else {
            System.out.println("Student not found.");
        }
    }

    public void displayStudent(String studentId) {
        if (students.containsKey(studentId)) {
            students.get(studentId).displayStudentInfo();
        } else {
            System.out.println("Student not found.");
        }
    }

    public void displayAllStudents() {
        if (students.isEmpty()) {
            System.out.println("No students available.");
        } else {
            for (Student student : students.values()) {
                student.displayStudentInfo();
                System.out.println();
            }
        }
    }

    public void searchStudentByName(String name) {
        List<Student> foundStudents = new ArrayList<>();
        for (Student student : students.values()) {
            if (student.getName().toLowerCase().contains(name.toLowerCase())) {
                foundStudents.add(student);
            }
        }
        if (foundStudents.isEmpty()) {
            System.out.println("No students found with name containing '" + name + "'.");
        } else {
            System.out.println("Students found with name containing '" + name + "':");
            for (Student student : foundStudents) {
                student.displayStudentInfo();
                System.out.println();
            }
        }
    }
}

public class Main {
    public static void main(String[] args) {
        StudentManagementSystem sms = new StudentManagementSystem();

        // Add students
        sms.addStudent("S001", "Alice", 20, 90.5);
        sms.addStudent("S002", "Bob", 22, 85.0);
        sms.addStudent("S003", "Charlie", 21, 92.3);
        sms.addStudent("S004", "David", 23, 88.7);

        // Display all students
        System.out.println("All students:");
        sms.displayAllStudents();

        // Search for a student by name
        System.out.println("Search for students with name containing 'bo':");
        sms.searchStudentByName("bo");

        // Update a student's information
        sms.updateStudent("S002", "Bob", 23, 89.0);

        // Display the updated student
        System.out.println("Updated student information:");
        sms.displayStudent("S002");

        // Remove a student
        sms.removeStudent("S003");

        // Display all students after removal
        System.out.println("All students after removal:");
        sms.displayAllStudents();
    }
}
